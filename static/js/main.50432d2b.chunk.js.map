{"version":3,"sources":["components/MovieList.js","components/Favourites.js","App.js","reportWebVitals.js","index.js"],"names":["IMG_API","MovieList","props","data","favouriteClick","useState","modalIsOpen","setModalIsOpen","className","onClick","src","poster_path","alt","title","original_title","xmlns","width","height","fill","class","viewBox","d","isOpen","original_language","release_date","overview","vote_average","vote_count","popularity","Favourites","favourites","removeCLick","length","map","ALL_MOVIES_API","App","movies","setMovies","searchTerm","setSearchTerm","setFavourites","fetchMovies","api","fetch","then","res","json","console","log","results","useEffect","movie","newFavouristList","filter","id","removeFavourite","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","setTimeout","newFavouriteList","addFavourite","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50432d2b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './MovieList.css'\nimport Modal from 'react-modal';\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nfunction MovieList(props) {\n\n    const { data, favouriteClick } = props;\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    return (\n        <>\n        <div className=\"movieList\">\n            <img onClick={() => setModalIsOpen(true)} src={data.poster_path ? IMG_API + data.poster_path : \"https://media.gettyimages.com/vectors/cinema-poster-with-cola-filmstrip-and-clapper-vector-vector-id1244034031?s=612x612\"} alt={data.title} />\n            <div className=\"movieList_info\">\n                <h3>{data.original_title}</h3>\n                <div className=\"fav_icon\" onClick={favouriteClick}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\n                        <path fill-rule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\n                    </svg>\n                    \n                </div>\n            </div>\n        </div>\n\n        <Modal isOpen={modalIsOpen} className=\"movieList_body\">\n\n                <div className=\"movieList_bodyHeader\">\n                    <h1>{data.original_title}</h1>\n                    \n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <div className=\"language\">\n                        <p>(<strong>lang: </strong>{data.original_language}) {}</p>\n                    </div>\n                    <p className=\"movieList_time\">[{data.release_date}]</p>\n                </div>\n                <div className=\"movieList_message\">\n                    <img className=\"img\" src={data.poster_path ? IMG_API + data.poster_path : \"https://media.gettyimages.com/vectors/cinema-poster-with-cola-filmstrip-and-clapper-vector-vector-id1244034031?s=612x612\"} alt={data.title} />\n                    <div className=\"text\">\n                        <p>\n                            <strong>Overview: </strong><br /><br />\n                            {data.overview}\n                        </p>\n                        <p>\n                            <strong>Ratings: </strong>{data.vote_average} \n                        </p>\n                        <p>\n                            <strong>Votes: </strong>{data.vote_count}\n                        </p>\n                        <p>\n                            <strong>Popularity: </strong>{data.popularity}\n                        </p>\n                    </div>\n                </div>\n                <button className=\"btn\" onClick={() => setModalIsOpen(false)}>Close</button>\n\n        </Modal>\n\n        </>\n    )\n}\n\nexport default MovieList\n","import React, { useState } from 'react'\nimport './Favourites.css'\nimport Modal from 'react-modal';\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nfunction Favourites(props) {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const { favourites, removeCLick } = props;\n\n    return (\n        <>\n        <div>\n            <button className=\"btn\" onClick={() => setModalIsOpen(true)}>Favourites</button>\n        </div>\n\n        <Modal isOpen={modalIsOpen} className=\"favourite_body\">\n\n            {\n                favourites.length === 0 ? <h3>No Favourites</h3> :\n                favourites.map((data) => \n                    <div className=\"fav_list\">\n                        <img className=\"img small\" src={data.poster_path ? IMG_API + data.poster_path : \"https://media.gettyimages.com/vectors/cinema-poster-with-cola-filmstrip-and-clapper-vector-vector-id1244034031?s=612x612\"} alt={data.title} />\n                        <p className=\"min-30\">{data.original_title}</p>\n                        <div onClick={() => removeCLick(data)}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\"/>\n                            </svg>\n                        </div>\n                    </div>\n                )\n            }\n                \n            <button className=\"btn2\" onClick={() => setModalIsOpen(false)}>Close</button>\n\n        </Modal>\n\n        </>\n    )\n}\n\nexport default Favourites\n","import { useEffect, useState } from 'react';\nimport MovieList from './components/MovieList';\nimport Favourites from './components/Favourites';\n\nconst ALL_MOVIES_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\nfunction App() {\n\n  const [movies, setMovies] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const [favourites, setFavourites] = useState([])\n\n  const fetchMovies = (api) => {\n    fetch(api)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.results);\n        setMovies(data.results)\n      })\n  }\n\n  useEffect(() => {\n    fetchMovies(ALL_MOVIES_API)\n  }, [])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if(searchTerm === ''){\n      fetchMovies(ALL_MOVIES_API)\n    }\n  }\n\n  const changeHandler = (e) => {\n    setSearchTerm(e.target.value)\n    e.preventDefault()\n    \n    setTimeout(() => {\n      if(searchTerm !== ''){  \n        fetchMovies(SEARCH_API + searchTerm)\n        // setSearchTerm('');\n      }\n      else{\n        fetchMovies(ALL_MOVIES_API)\n      }\n    }, 2000);\n  }\n\n  const addFavourite = (movie) => {\n    const newFavouriteList = [...favourites, movie]\n    setFavourites(newFavouriteList)\n  }\n\n  const removeFavourite = (movie) => {\n    const newFavouristList = favourites.filter(favourites => favourites.id !== movie.id)\n    setFavourites(newFavouristList)\n}\n\n  return (\n    <div className=\"App\">\n\n      <Favourites favourites={favourites} removeCLick={(movie) => removeFavourite(movie)}  />\n\n      <div className=\"searchBox\">\n        <form onSubmit={submitHandler}>\n          <input type=\"search\" placeholder=\"search\" value={searchTerm} onChange={changeHandler} />\n          <i className=\"fa fa-search\"></i>\n        </form>\n      </div>\n      \n      <div className=\"allMoviesList\">\n        {\n          movies.map((movie) => \n            <MovieList favouriteClick={() => addFavourite(movie)} data={movie} />\n          )\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}